From 11dae1dd5a7600534807e254dfa30c9613779dd7 Mon Sep 17 00:00:00 2001
From: GloriousEggroll <gloriouseggroll@gmail.com>
Date: Sat, 29 Apr 2023 14:46:16 -0600
Subject: [PATCH] encoder rename

---
 plugins/obs-ffmpeg/jim-nvenc.c        | 4 ++--
 plugins/obs-ffmpeg/obs-ffmpeg-av1.c   | 4 ++--
 plugins/obs-ffmpeg/obs-ffmpeg-nvenc.c | 4 ++--
 plugins/obs-ffmpeg/texture-amf.cpp    | 6 +++---
 plugins/obs-x264/obs-x264.c           | 2 +-
 5 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/plugins/obs-ffmpeg/jim-nvenc.c b/plugins/obs-ffmpeg/jim-nvenc.c
index 10a7dd1..c912205 100644
--- a/plugins/obs-ffmpeg/jim-nvenc.c
+++ b/plugins/obs-ffmpeg/jim-nvenc.c
@@ -227,14 +227,14 @@ static void nv_texture_free(struct nvenc_data *enc, struct nv_texture *nvtex)
 static const char *h264_nvenc_get_name(void *type_data)
 {
 	UNUSED_PARAMETER(type_data);
-	return "NVIDIA NVENC H.264";
+	return "GPU: NVIDIA NVENC H.264 (FFmpeg)";
 }
 
 #ifdef ENABLE_HEVC
 static const char *hevc_nvenc_get_name(void *type_data)
 {
 	UNUSED_PARAMETER(type_data);
-	return "NVIDIA NVENC HEVC";
+	return "GPU: NVIDIA NVENC H.265/HEVC (FFmpeg)";
 }
 #endif
 
diff --git a/plugins/obs-ffmpeg/obs-ffmpeg-av1.c b/plugins/obs-ffmpeg/obs-ffmpeg-av1.c
index 0b671ae..681f728 100644
--- a/plugins/obs-ffmpeg/obs-ffmpeg-av1.c
+++ b/plugins/obs-ffmpeg/obs-ffmpeg-av1.c
@@ -41,13 +41,13 @@ struct av1_encoder {
 static const char *aom_av1_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "AOM AV1";
+	return "CPU: AOM AV1 (FFmpeg)";
 }
 
 static const char *svt_av1_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "SVT-AV1";
+	return "CPU: SVT-AV1 (FFmpeg)";
 }
 
 static void av1_video_info(void *data, struct video_scale_info *info)
diff --git a/plugins/obs-ffmpeg/obs-ffmpeg-nvenc.c b/plugins/obs-ffmpeg/obs-ffmpeg-nvenc.c
index 8cd8138..add8e02 100644
--- a/plugins/obs-ffmpeg/obs-ffmpeg-nvenc.c
+++ b/plugins/obs-ffmpeg/obs-ffmpeg-nvenc.c
@@ -45,7 +45,7 @@ struct nvenc_encoder {
 extern bool ubuntu_20_04_nvenc_fallback;
 #endif
 
-#define ENCODER_NAME_H264 "NVIDIA NVENC H.264 (FFmpeg)"
+#define ENCODER_NAME_H264 "GPU: NVIDIA NVENC H.264 (FFmpeg)"
 static const char *h264_nvenc_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
@@ -53,7 +53,7 @@ static const char *h264_nvenc_getname(void *unused)
 }
 
 #ifdef ENABLE_HEVC
-#define ENCODER_NAME_HEVC "NVIDIA NVENC HEVC (FFmpeg)"
+#define ENCODER_NAME_HEVC "GPU: NVIDIA NVENC H.265/HEVC (FFmpeg)"
 static const char *hevc_nvenc_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
diff --git a/plugins/obs-ffmpeg/texture-amf.cpp b/plugins/obs-ffmpeg/texture-amf.cpp
index 0f5ee7b..e350257 100644
--- a/plugins/obs-ffmpeg/texture-amf.cpp
+++ b/plugins/obs-ffmpeg/texture-amf.cpp
@@ -2101,7 +2101,7 @@ static obs_properties_t *amf_av1_properties(void *unused)
 
 static const char *amf_avc_get_name(void *)
 {
-	return "AMD HW H.264 (AVC)";
+	return "GPU: AMD AMF H.264 (FFmpeg)";
 }
 
 static inline int get_avc_preset(amf_base *enc, const char *preset)
@@ -2443,7 +2443,7 @@ static void register_avc()
 
 static const char *amf_hevc_get_name(void *)
 {
-	return "AMD HW H.265 (HEVC)";
+	return "GPU: AMD AMF H.265/HEVC (FFmpeg)";
 }
 
 static inline int get_hevc_preset(amf_base *enc, const char *preset)
@@ -2788,7 +2788,7 @@ static void register_hevc()
 
 static const char *amf_av1_get_name(void *)
 {
-	return "AMD HW AV1";
+	return "GPU: AMD AMF AV1 (FFmpeg)";
 }
 
 static inline int get_av1_preset(amf_base *enc, const char *preset)
diff --git a/plugins/obs-x264/obs-x264.c b/plugins/obs-x264/obs-x264.c
index 1de88d3..d4c377d 100644
--- a/plugins/obs-x264/obs-x264.c
+++ b/plugins/obs-x264/obs-x264.c
@@ -68,7 +68,7 @@ struct obs_x264 {
 static const char *obs_x264_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "x264";
+	return "CPU: x264";
 }
 
 static void obs_x264_stop(void *data);
diff --git a/plugins/obs-ffmpeg/obs-ffmpeg-vaapi.c b/plugins/obs-ffmpeg/obs-ffmpeg-vaapi.c
index 370f9b7..e0bbd82 100644
--- a/plugins/obs-ffmpeg/obs-ffmpeg-vaapi.c
+++ b/plugins/obs-ffmpeg/obs-ffmpeg-vaapi.c
@@ -89,20 +89,20 @@ struct vaapi_encoder {
 static const char *h264_vaapi_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "FFmpeg VAAPI H.264";
+	return "GPU: AMD/Intel VAAPI H.264 (FFmpeg)";
 }
 
 static const char *av1_vaapi_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "FFmpeg VAAPI AV1";
+	return "GPU: AMD/Intel VAAPI AV1 (FFmpeg)";
 }
 
 #ifdef ENABLE_HEVC
 static const char *hevc_vaapi_getname(void *unused)
 {
 	UNUSED_PARAMETER(unused);
-	return "FFmpeg VAAPI HEVC";
+	return "GPU: AMD/Intel VAAPI H.265/HEVC (FFmpeg)";
 }
 #endif
 
-- 
2.40.0

